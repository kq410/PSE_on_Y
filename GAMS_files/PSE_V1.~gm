Set
         i monomer plants /i1 cracking, i2 OCU, i3 BU/
         p all chemicals /propane, ethane, ethylene, propylene,
                         butene, PE1, PE2/

         j polymer reactor /j1, j2/
         t time period /1*3/
         h IHP centres /h1, h2/
         c customers /c1, c2/

         g(p) grade products /PE1, PE2/
         o(p) product intermediates /ethylene, propylene, butene/
         m(p) monomer plant materials /propane, ethane, ethylene,
                                         propylene, butene/

         HC(h,c) IHP and customer mapping /h1.c1, h2.c2/

         alias(h,hp);
         alias(m,mp);

Parameters
         p_min(i)  minimum production amount in olefin plant i
         p_max(i)  maximum production amount in olefin plant i
         PR(g,j)   production rate of grade g in polymer reactor j
         tao(g,j)  minimum runtime for grade g to be produced in
                   polymer reactor j
         f(t)      length of time period t
         phi(j,t)  available fraction of time in time period t
         miu(i,mp,m) production coefficient of monomer o
                     in terms of m in olefin plant i
         n(m,g)    consumption coefficient of olefin o when producing grade g
         D(g,c,t)  demand of grade g of customer c in time period t
         SP(g,c)   sale price of grade g to customer c
         SO(m)     export price of olefin o
         PC(m)     purchase price
         OC(i)     coefficient for operation cost of olefin plant i
         OP(g,j)   coefficient for operation cost of polymer reactor j for
                   producing grade g
         LT(h)     lead time from UAE GATEWAY to IHP h;

$onecho > tasks.txt
par = p_min rng = Par!c3 cdim = 1
par = p_max rng = Par!c8 cdim = 1
par = PR   rng = Par!c13 rdim = 1 cdim = 1
par = tao  rng = Par!c19 rdim = 1 cdim = 1
par = f    rng = Par!c25 rdim = 0 cdim = 1
par = phi  rng = Par!c30 rdim = 1 cdim = 1
par = miu  rng = Par!c36 rdim = 2 cdim = 1
par = n    rng = Par!c44 rdim = 1 cdim = 1
par = D    rng = Par!c50 rdim = 2 cdim = 1
par = SP   rng = Par!c58 rdim = 1 cdim = 1
par = SO   rng = Par!c64 rdim = 0 cdim = 1
par = PC   rng = Par!c69 rdim = 0 cdim = 1
par = OC   rng = Par!c74 rdim = 0 cdim = 1
par = OP   rng = Par!c79 rdim = 1 cdim = 1
par = LT   rng = Par!c85 rdim = 0 cdim = 1

$offecho
*$call GDXXRW PSE_data.xlsx trace = 3 @tasks.txt
$GDXIN PSE_data.gdx
$LOADDC p_min, p_max, PR, tao, f, phi, miu, n, D, SP, SO, PC, OC, OP, LT
$GDXIN

*Display p_min, p_max, PR, tao, f, phi, miu, n, D, SP, SO, PC, OC, OP, LT;


Positive Variables
         PM(i,m,t) amount of material m consumed in unit i
         PO(i,t)   production amount of olefin plant i in time period t
         PP(g,j,t) produced amount of grade g in polymer reactor j over period t
         IC(m,t)   plant inventory level of olefin o at time period t
         PU(m,t)   amount of olefin o purchased at time period t
         S(m,t)    amount of olefin sold by export at time period t
         Q(g,h,t)  shipment of grade g to IHP h at time period t
         IH(g,h,t) inventory level of grade g at IHP h at time period t
         QC(g,h,c,t) supply of grade g from IHP h to customer c at period t;

Binary Variables
         Y(g,j,t) is = 1 if g is produced in polymer plant j over period t;

Variables
         Z objective value (the profit in this case) ;


         PO.up(i,t) = p_max(i);
         PO.lo(i,t) = p_min(i);
         IC.fx(m,'1') = 20;
*IP.fx(g,'1') = 20;
         IH.fx(g,h,'1') = 5;
         IH.lo(g,h,t) = 5;
         S.fx(m,'1') = 0;

         Q.fx(g,'h1',t)= 0;
         QC.fx(g,h,c,t)$(not HC(h,c)) = 0;

Equations
         obj    objective funciton

         min_amount minimal amount produced by each polymer reactor
         max_amount maximal amount produced by each polymer reactor
         sum_amount sum amount of each polymer reactor j
         product_capacity capacity of each i must be maintained
         olefin_inv inventory for olefins
         grade_inv  inventory for grades

*$ontext
         IHP_inv    inventory for each IHP location
         demand_con demand constraints

*$offtext


;


         obj..  Z =E= sum((g,h,c,t), QC(g,h,c,t) * SP(g,c))
                         + sum((m,t), S(m,t) * SO(m))
                         - sum((m,t), PU(m,t) * PC(m))
                         - sum((i,t), PO(i,t) * OC(i))
                         - sum((g,j,t), PP(g,j,t) * OP(g,j))
;

         min_amount(g,j,t).. PP(g,j,t) =G= PR(g,j) * Y(g,j,t) * tao(g,j);

         max_amount(g,j,t).. PP(g,j,t) =L= PR(g,j) * Y(g,j,t) * f(t) * phi(j,t);

         sum_amount(j,t).. sum(g, PP(g,j,t)/PR(g,j)) =L= f(t) * phi(j,t);

         product_capacity(i,t).. sum(m, PM(i,m,t)) =E= PO(i,t);

         olefin_inv(m,t-1).. IC(m,t) =E= IC(m,t-1)
                             + sum((i,mp), miu(i,mp,m)*PM(i,mp,t))
                             - sum(i, PM(i,m,t))
                             + PU(m,t) - S(m,t) - sum((g,j), n(m,g)*PP(g,j,t));


         grade_inv(g,h,t-1)$(ord(h) = 1).. IH(g,h,t) =E=
                             IH(g,h,t-1) + sum(j, PP(g,j,t-LT(h)))
                             - sum(hp $(ord(hp) > ord(h)), Q(g,hp,t))
                             - sum(c, QC(g,h,c,t));

*$ontext
         IHP_inv(g,h,t-1)$(ord(h) > 1).. IH(g,h,t) =E= IH(g,h,t-1)
                                  + Q(g, h,t-LT(h))
                                  - sum(c, QC(g,h,c,t));


         demand_con(g,c,t).. sum(h, QC(g,h,c,t)) =L= D(g,c,t);
*$offtext


Model test /all/;

Option optcr = 0.01;

option MIP = cplex  ;

*Option solslack = 1;
*Option solprint = off, limrow = 0, limcol = 0 ;

Solve test maximizing Z using MIP;

Execute_Unload "test.gdx" ;

Display  Z.l, Y.l, S.l, IH.l, PP.l, Q.l, QC.l, IC.l, D, IC.l;

